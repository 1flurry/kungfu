PROJECT(xtp_gateway)

if(NOT XTP_API_VERSION)
    set(XTP_API_VERSION XTP_API_20180516_1.1.18.13)
endif()

INCLUDE_DIRECTORIES(api/${XTP_API_VERSION}/include)

if(UNIX AND NOT APPLE)
    LINK_DIRECTORIES(api/${XTP_API_VERSION}/lib/linux)
endif()
if(APPLE)
    LINK_DIRECTORIES(api/${XTP_API_VERSION}/lib/macosx)
endif()
if(WIN32)
    LINK_DIRECTORIES(api/${XTP_API_VERSION}/lib/win64/dll)
endif()

SET(MD_SOURCE_FILES md/md_gateway.cpp md/md_gateway.h)
ADD_LIBRARY(xtp_md SHARED ${MD_SOURCE_FILES})

SET(TD_SOURCE_FILES td/td_gateway.cpp td/td_gateway.h td/order_mapper.h serialize.h)
ADD_LIBRARY(xtp_td SHARED ${TD_SOURCE_FILES})

if(WIN32)
    TARGET_LINK_LIBRARIES(xtp_td xtptraderapi gateway_impl fmt)
    TARGET_LINK_LIBRARIES(xtp_md xtpquoteapi gateway_impl fmt)
endif()
if(UNIX AND NOT APPLE)
    TARGET_LINK_LIBRARIES(xtp_td xtptraderapi gateway_impl fmt)
    TARGET_LINK_LIBRARIES(xtp_md xtpquoteapi gateway_impl fmt)
endif()
if(APPLE)
    TARGET_LINK_LIBRARIES(xtp_td xtptraderapi gateway_impl fmt iconv)
    TARGET_LINK_LIBRARIES(xtp_md xtpquoteapi gateway_impl fmt iconv)
    FILE(COPY api/${XTP_API_VERSION}/lib/macosx/libxtpquoteapi.dylib DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    FILE(COPY api/${XTP_API_VERSION}/lib/macosx/libxtptraderapi.dylib DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
endif()

if(WIN32)
    TARGET_LINK_LIBRARIES(xtp_td xtptraderapi gateway_impl)
    TARGET_LINK_LIBRARIES(xtp_md xtpquoteapi gateway_impl)
    FILE(COPY api/${XTP_API_VERSION}/lib/win64/dll/xtpquoteapi.dll DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    FILE(COPY api/${XTP_API_VERSION}/lib/win64/dll/xtptraderapi.dll DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    FILE(COPY api/${XTP_API_VERSION}/lib/win64/dll/xtpquoteapi.lib DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    FILE(COPY api/${XTP_API_VERSION}/lib/win64/dll/xtptraderapi.lib DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
endif()
ADD_EXECUTABLE(xtp_md_gateway_daemon md/md_gateway_daemon.cpp)
TARGET_LINK_LIBRARIES(xtp_md_gateway_daemon xtp_md)
ADD_EXECUTABLE(xtp_td_gateway_daemon td/td_gateway_daemon.cpp)
TARGET_LINK_LIBRARIES(xtp_td_gateway_daemon xtp_td)

add_subdirectory(pybind)


if(WIN32)
	add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/api/${XTP_API_VERSION}/lib/win64/dll/xtpquoteapi.dll "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
	add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/api/${XTP_API_VERSION}/lib/win64/dll/xtptraderapi.dll "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
	add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/impl/gateway_impl.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/")
	add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/deps/nanomsg-1.1.5/src/nanomsg.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/yijinjing/journal/journal.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/event_loop/event_loop.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/commission/commission.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/util/instrument.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/uid_generator/uid_generator.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/")
	add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/task_scheduler/task_scheduler.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/nn_publisher/nn_publisher.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/oms/oms.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/portfolio/portfolio.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/calendar/calendar.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/" )
    add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/storage/storage.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp/")
	add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "C:\\local\\boost_1_64_0\\lib64-msvc-14.1\\boost_filesystem-vc141-mt-gd-1_64.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp")
	add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "C:\\local\\boost_1_64_0\\lib64-msvc-14.1\\boost_system-vc141-mt-gd-1_64.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp")
	add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "C:\\local\\boost_1_64_0\\lib64-msvc-14.1\\boost_locale-vc141-mt-gd-1_64.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp")
	add_custom_command(TARGET xtp_md POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "C:\\local\\boost_1_64_0\\lib64-msvc-14.1\\boost_regex-vc141-mt-gd-1_64.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/gateway/xtp")
endif()