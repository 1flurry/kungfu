
project(strategy)
SET(UTIL_SOURCE_FILES src/strategy_util.cpp src/strategy_util.h)
SET(STRATEGY_FILES include/strategy.h src/strategy.cpp)
ADD_LIBRARY(strategy_util SHARED ${UTIL_SOURCE_FILES})
ADD_LIBRARY(strategy SHARED ${STRATEGY_FILES})

TARGET_LINK_LIBRARIES(strategy_util journal uid_generator nanomsg nn_publisher fmt oms portfolio calendar storage ${PYTHON_LIBRARY} ${Boost_LIBRARIES})
TARGET_LINK_LIBRARIES(strategy strategy_util event_loop)

ADD_SUBDIRECTORY(pybind)
add_subdirectory(demo)

if(WIN32)
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/deps/nanomsg-1.1.5/src/nanomsg.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/yijinjing/journal/journal.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/event_loop/event_loop.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/commission/commission.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/util/instrument.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/uid_generator/uid_generator.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/nn_publisher/nn_publisher.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/oms/oms.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/portfolio/portfolio.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/calendar/calendar.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/" )
    add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/cpp/wingchun/storage/storage.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/")
	add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "C:\\local\\boost_1_64_0\\lib64-msvc-14.1\\boost_filesystem-vc141-mt-1_64.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/")
	add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "C:\\local\\boost_1_64_0\\lib64-msvc-14.1\\boost_system-vc141-mt-1_64.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/")
	add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "C:\\local\\boost_1_64_0\\lib64-msvc-14.1\\boost_locale-vc141-mt-1_64.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/")
	add_custom_command(TARGET strategy POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "C:\\local\\boost_1_64_0\\lib64-msvc-14.1\\boost_regex-vc141-mt-1_64.dll" "${CMAKE_BINARY_DIR}/cpp/wingchun/strategy/")
endif()

