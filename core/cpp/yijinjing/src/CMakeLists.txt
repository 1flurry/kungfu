AUX_SOURCE_DIRECTORY(journal SOURCE_FILES_JOURNAL)
AUX_SOURCE_DIRECTORY(nanomsg SOURCE_FILES_NANOMSG)
AUX_SOURCE_DIRECTORY(log SOURCE_FILES_LOG)
AUX_SOURCE_DIRECTORY(io SOURCE_FILES_IO)
AUX_SOURCE_DIRECTORY(time SOURCE_FILES_TIME)
AUX_SOURCE_DIRECTORY(practice SOURCE_FILES_PRACTICE)

ADD_LIBRARY(${PROJECT_NAME} SHARED
        ${SOURCE_FILES_JOURNAL}
        ${SOURCE_FILES_NANOMSG}
        ${SOURCE_FILES_LOG}
        ${SOURCE_FILES_IO}
        ${SOURCE_FILES_TIME}
        ${SOURCE_FILES_PRACTICE}
        )
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES LINKER_LANGUAGE CXX)

IF(WIN32)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} nanomsg SQLiteCpp fmt ${Boost_LIBRARIES})
ENDIF()
IF(UNIX)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} nanomsg SQLiteCpp fmt iconv ${Boost_LIBRARIES})
ENDIF()


ADD_EXECUTABLE(journal ${SOURCE_FILES_JOURNAL} ${SOURCE_FILES_NANOMSG} ${SOURCE_FILES_LOG} ${SOURCE_FILES_IO} ${SOURCE_FILES_TIME} ${SOURCE_FILES_PRACTICE})
TARGET_LINK_LIBRARIES(journal nanomsg SQLiteCpp fmt iconv ${Boost_LIBRARIES})
